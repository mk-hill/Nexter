
//*************************************** ABSTRACTS ***************************************\\

// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

// FONT VARIABLES
$font-primary: 'Nunito', sans-serif;
$font-display: 'Josefin Sans', sans-serif;

/////////////////////////////////////////////////////////////////////////////////////
// MEDIA QUERY MANAGER (inputs)
// 0-600:       (smaller)
// 600-800:		(small)
// 800-1000: 	(medium)
// 1000-1200: 	(large)
// 1200-1800:   --Regular Styles--
// 1800+:		(x-large)
// No hover:	(no-hover)
// Our base rem setting of 62.5% for 10px does not apply to media queries
// And rems do not always translate well to media queries so we're using ems
// Using ems instead of px to ensure it scales to user preferences on base font size
// Not making breakpoints exclusive so that we can apply multiple to keep code DRY
// >1800 ? apply big : <1200 ? apply tab-land; <900 ? apply additional changes etc.
@mixin respond($breakpoint) {
    @if $breakpoint == smaller {
		@media only screen and (max-width: 37.5em) { @content };     //600px
	}
	@if $breakpoint == small {
		@media only screen and (max-width: 50em) { @content }; 	    //800px
	}
	@if $breakpoint == medium {
		@media only screen and (max-width: 62.5em) { @content }; 	//1000px
	}
	@if $breakpoint == large {
		@media only screen and (max-width: 75em) { @content };	    //1200px
	}
	@if $breakpoint == x-large {
		@media only screen and (min-width: 112.5em) { @content }; 	//1800px
	}
	@if $breakpoint == no-hover {
		@media only screen and (hover: none) { @content };          //No hover capability
	}
}

//*****************************************************************************************\\

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; // 10px/16px = 62.5% => 1rem = 10px for users who haven't modified default

    @include respond(large) {
        font-size: 50%;
    }

    @include respond(x-large) {
        font-size: 75%;
    }
}

body {
    font-family: $font-primary;
    color: $color-grey-dark-2;
    font-weight: 300;
    line-height: 1.6;
}

/////////////////////////////////////////////////////////////////////////////
// GRID COLUMN LAYOUT
// 8rem for sidebar, 1fr on each side of ~1140px center layout to fill evenly
// Also allows for "full-bleed" sections among 8 column sections as shown:
// -------------------------------------
// side|FULL*******BLEED*******SECTIONS|
// ^bar| empty |center sections| empty |
// -------------------------------------
// Center column lines named col-start n & col-end n
// Added minmax to 1fr filler columns to ensure maring is retained around
// center sections as viewport shrinks
.container {
    display: grid;
    grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
    grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];

    // Remove sidebar column and add row instead for smaller vw
    @include respond(medium) {
        grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
        grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
    }

    // Split header and realtors into 2 columns, have header cover 100vh-top bar
    // All rows after 2nd become auto implicit
    @include respond(small) {
        grid-template-rows: 6rem calc(100vh - 6rem);
    }
}